[ { "title": "iOS 프로그래밍 실무 12주차", "url": "/posts/iOS-3-week12/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-05-21 14:00:00 +0900", "snippet": "OpenAPI 기반 iOS 앱 제작화면 전환 Root View Controller UIWindow의 가장 첫 번째, 최상위 뷰 컨트롤러 앱이 실행될 때 처음 사용자에게 보여지는 메인 뷰 컨트롤러 UINavigationController, UITabBarController와 같은 컨테이너 뷰 컨트롤러가 주로 루트로 사용됨 Action Segue vs. Manual Segue 구..." }, { "title": "iOS 프로그래밍 실무 11주차", "url": "/posts/iOS-3-week11/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-05-14 14:00:00 +0900", "snippet": "OpenAPI 기반 iOS 앱 개발MovieData형 구조체 struct MovieData: Codable { let boxOfficeResult: BoxOfficeResult} struct BoxOfficeResult: Codable { let dailyBoxOfficeList: [DailyBoxOfficeList]} struct DailyBoxOfficeList: Codable { let movieNm: String let audiCnt: String let audiAcc: String ..." }, { "title": "iOS 프로그래밍 실무 10주차", "url": "/posts/iOS-3-week10/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-05-07 14:00:00 +0900", "snippet": "영화진흥위원회 Open API 이용한 iOS 앱 개발Table View Constraints 설정 Table View를 화면 전체애 채우기 위해 상하좌우 모두 0으로 설정 Table View Cell Swift의 기본 Cell 이외에 직접 Cell을 만들기 위해서 사용 Cell을 관리하기 위한 Swift 파일 생성ViewController UITableViewDataSource 프로토콜 채택 시 필수 메서드를 구현해야 함table.delegate = self Delegate 특..." }, { "title": "iOS 프로그래밍 실무 9주차", "url": "/posts/iOS-3-week9/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-05-01 14:00:00 +0900", "snippet": "REST REpresentational State Tranfer 웹에서 정보를 주고받는 방법 특징 리소스 (Resource) 인터넷에 존재하는 모든 정보 (회원, 게시글 등) ex: /users/1 (1번 회원), /posts (게시글 전체) 주소 (URI, URL) 리소스마다 주소가 있음 ex: https://site.com/users/1 ..." }, { "title": "iOS 프로그래밍 실무 7주차", "url": "/posts/iOS-3-week7/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-04-16 14:00:00 +0900", "snippet": "열거형 (Enum)열거형 (Enum)을 지원하는 언어 Java enum Season { WINTER, SPRING, SUMMER, FALL } C# enum Days { Sunday, Monday, Tuesday } C/C++ enum color { red, green, blue } Python enum 모듈..." }, { "title": "iOS 프로그래밍 실무 6주차", "url": "/posts/iOS-3-week6/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-04-09 14:00:00 +0900", "snippet": "옵셔널 체이닝 (Optional Chaining) 옵셔널 타입으로 정의된 값이 프로퍼티나 메서드를 가지고 있을 때, 다중 if를 쓰지 않고 간결하게 코드를 작성하기 위해 사용 옵셔널 타입의 데이터는 연산이 불가능 연산을 하기 위해서는 옵셔널을 해제해야 하는데, 많은 양의 옵셔널 타입의 데이터의 경우 다시 한번 옵셔널 타입으로 변경을 하면서 해제를 시켜줌 옵셔널 체이닝을 지원하는 언어Javascript ?. 연산자를 이용하여 옵셔널 체이닝 구현const user = { profile: { ..." }, { "title": "iOS 프로그래밍 실무 5주차", "url": "/posts/iOS-3-week5/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-04-02 14:00:00 +0900", "snippet": "Delegate, Datasource 상속과 달리 프로토콜 (Protocol)은 채택(Adpot)한다라고 표현 UITableViewDataSource 프로토콜은 필수 메서드 2개가 있으며 나머지는 선택적으로 사용 가능 numberOfSections(in:) 테이블 뷰에 섹션 수 지정 tableView(_:titleForHeaderInSection:) 각 섹션의 헤더에 표시될 텍스트 지정 ..." }, { "title": "iOS 프로그래밍 실무 4주차", "url": "/posts/iOS-3-week4/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-03-26 14:00:00 +0900", "snippet": "AppDelegateimport UIKit // UIKit 프레임워크를 임포트합니다. UI 구성 요소를 만들기 위해 필요합니다.@main // 프로그램의 진입점을 나타냅니다.class AppDelegate: UIResponder, UIApplicationDelegate { // AppDelegate 클래스는 UIResponder를 상속하고 UIApplicationDelegate 프로토콜을 준수합니다. // 애플리케이션이 시작될 때 호출되는 메서드입니다. func application(_ application:..." }, { "title": "iOS 프로그래밍 실무 3주차", "url": "/posts/iOS-3-week3/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-03-19 14:00:00 +0900", "snippet": "무드등 앱개발 계획서 인기 무드등 iOS 앱 분석 앱 1: White Noise Night Light Torch 기능: 불면증 치료에 도움을 주는 다양한 색상 조명, 화면 밝기 조절, 잠 타이머, 손전등 기능 1. 앱 2: 야간 조명 수면을 진정시키는 시키십시요 기능: 화면 밝기 조정, 다양한 색상 배경 제공, 부드러운 조명 효과 2. 앱 3: Morpholio Board ..." }, { "title": "iOS 프로그래밍 실무 2주차", "url": "/posts/iOS-3-week2/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-03-15 16:00:00 +0900", "snippet": "데이터 타입 Swift에서 숫자를 저장하기 위한 변수 선언var myNumber = 10var myNumber: Int = 10 print() 사용법var x: Intx = 10print(x) // 10print() 함수의 seperator와 terminator를 이용해 출력 양식을 지정해줄 수 있다.seperator의 기본 값은 공백이며 terminator의 기본 값은 개행(\\n)으로 되어 있다.자료형 종류와 크기var x = 10print(type(of:x))let s = MemoryLayout.size(ofValue:..." }, { "title": "iOS 프로그래밍 실무 1주차", "url": "/posts/iOS-3-week1/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2025-03-05 14:00:00 +0900", "snippet": "신입 개발자 면접 질문과 답변요청: 나는 클라우드 개발자로 취업하려고 하는데 신입 면접 질문과 답변을 간단하게 작성해줘.ChatGPT (wrtn)일반적인 면접 질문클라우드 컴퓨팅이란 무엇인가요?클라우드 컴퓨팅은 인터넷을 통해 데이터 저장, 관리 및 처리 서비스를 제공하는 기술입니다. 사용자는 서버, 스토리지, 데이터베이스, 네트워킹, 소프트웨어 등을 필요에 따라 사용할 수 있습니다. 1AWS와 Azure의 차이점은 무엇인가요?AWS는 Amazon에서 제공하는 클라우드 서비스로, 다양한 서비스와 글로벌 인프라를 갖추고 있습니다...." }, { "title": "iOS 프로그래밍 14주차", "url": "/posts/iOS-week14/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-12-04 14:00:00 +0900", "snippet": "Autolayout UI 요소의 위치와 크기를 동적으로 조정할 수 있도록 도와주는 시스템 다양한 화면 크기와 방향에 맞춰 UI를 자동으로 조정하여 다양한 기기에서 일관된 사용자 경험 제공 Constraints를 추가한 경우 Scene에 Constraints Item 추가됨Constraints (제약조건) Constraints: Align Horizontally, Vertically를 둘 다 0으로 설정할 경우 정가운데로 고정됨 Constraints: Pin Constraints: Embed..." }, { "title": "iOS 프로그래밍 13주차", "url": "/posts/iOS-week13/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-11-27 14:00:00 +0900", "snippet": "Video SceneVideo Scene 스토리보드와 VideoViewController 클래스 연결Video Scene Identity Inspector -&amp;gt; Custom Class -&amp;gt; VideoViewController 클래스 선택VideoViewControllerimport UIKitimport AVKitclass VideoViewController: UIViewController { @IBAction func playVideo(_ sender: UIButton) { // 비디..." }, { "title": "iOS 프로그래밍 12주차", "url": "/posts/iOS-week12/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-11-20 14:00:00 +0900", "snippet": "오토 레이아웃Main.storyboard Issue Navigator 오토 레이아웃이 설정되어 있지 않은 경우 Issue Navigator에서 관련 사항에 대한 내용이 표시됨.오토 레이아웃의 특징 다양한 화면 크기와 방향에 따라 UI를 유연하게 조정할 수 있도록 도와주는 레이아웃 시스템 UI 요소 간의 관계를 정의하는 제약 조건을 설정하여 화면 크기나 기기 유형이 달라져도 UI가 올바르게 표시되도록 할 수 있음. 주요 특징 제약 조건: UI 요소 간의 위치, 크기 및 간격을 정의하는 규칙 설정 ..." }, { "title": "iOS 프로그래밍 11주차", "url": "/posts/iOS-week11/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-11-13 14:00:00 +0900", "snippet": "페이지 컨트롤import UIKit // UIKit 프레임워크를 가져옵니다. UI 요소를 만들기 위해 필요합니다.var images = [ &quot;01.png&quot;, &quot;02.png&quot;, &quot;03.png&quot;, &quot;04.png&quot;, &quot;05.png&quot;, &quot;06.png&quot; ] // 이미지 파일 이름을 포함하는 배열을 정의합니다.class ViewController: UIViewController { // ViewController 클래스를 정의하며,..." }, { "title": "iOS 프로그래밍 10주차", "url": "/posts/iOS-week10/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-11-06 14:00:00 +0900", "snippet": "앱 아이콘 Assets의 AppIcon 아이템에 이미지를 넣은 후 빌드 이미지는 1024x1024px 이어야 함. 리셋 버튼 추가 Button 추가 후 ViewController로 Action 유형 연결@IBAction func btnReset(_ sender: UIButton) { lblHello.textColor = .brown // 리셋 버튼 누르면 lblHello의 텍스트 컬러를 brown으로 변경 lblHello.text = &quot;안녕하세요!&quot; // lblHello..." }, { "title": "iOS 프로그래밍 9주차", "url": "/posts/iOS-week9/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-10-30 14:00:00 +0900", "snippet": "Swift 앱 개발프로젝트 생성 Product Name: 프로젝트 이름 Organization Identifier: 프로젝트 고유 식별자 Interface: 인터페이스 (Storyboard / SwiftUI) Language: 언어 (Swift / Objective-C) 프로젝트 위치 설정 Git 저장소 생성 여부 프로젝트 설정 Minimum Deployments: 앱 설치에 요구되는 최소 iOS 버전 iPhone Orientation: iPhone을 회전시켰을 때 어떻게 움직일 것인지 설..." }, { "title": "iOS 프로그래밍 7주차", "url": "/posts/iOS-week7/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-10-16 14:00:00 +0900", "snippet": "클래스 (Class) 설계도인 클래스로부터 만들어진 실체를 객체라 하고 실제로 사용 중인 객체를 인스턴스라 한다.언어 별 객체지향 용어 비교객체 인스턴스 인스턴스 (Instance) 실제로 메모리에 할당된 객체 (Object) 소프트웨어 애플리케이션을 개발하는 데 사용되는, 쉽게 사용할 수 있으며 재사용할 수 있는 기능을 가진 모듈 객체의 구성 데이터 변수 (Data Variable) / 속성 (Property) 함수 / 메서드 (Method) 언어..." }, { "title": "iOS 프로그래밍 6주차", "url": "/posts/iOS-week6/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-10-15 10:00:00 +0900", "snippet": "Guard문 Swift 2에 도입된 구문으로, Guard문은 표현식이 거짓(False)으로 판단될 경우에 수행된 Else 절을 반드시 포함해야 함. Else 절에 속한 코드는 현재의 코드 흐름을 빠져나갈 수 있는 구문 (Return, Break, Continue, Throw 구문)을 반드시 포함해야 함. 또는 다른 함수를 Else 코드 블록 안에서 호출할 수도 있음. guard &amp;lt;불리언 표현식&amp;gt; else { // 표현식이 거짓일 경우에 실행될 코드 // 코..." }, { "title": "iOS 프로그래밍 5주차", "url": "/posts/iOS-week5/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-10-08 10:00:00 +0900", "snippet": "함수 (Function) 특정 작업을 수행하는 코드 블록 실행 시 데이터를 제공해야 하거나 함수를 호출한 코드에 작업한 결과를 반환할 수도 있음. 매개변수 (Parameter)와 인수 (Argument)는 차이점이 있음. 함수 정의부 값을 매개변수 (Parameter), 호출 시의 값은 인수 (Argument)#include &amp;lt;stdio.h&amp;gt;void Fun(int Param) { // Parameter (매개변수), 형식 매개변수 (Formal Parameter) printf(&quot;%..." }, { "title": "iOS 프로그래밍 4주차", "url": "/posts/iOS-week4/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-09-25 14:00:00 +0900", "snippet": "연산자 (Operator)대입 연산자오른쪽 피연산자는 주로 산술식 또는 논리식을 수행하는 표현식, 그 결과는 왼쪽 피연산자인 변수나 상수에 할당var x: Int ? // 옵셔널 Int 변수 선언var y = 10 // 일반 Int 변수 선언, 초기화x = 10 // 값을 x에 할당, Optional(10)x = x! + y // x + y의 결과를 x에 할당, Optional(20)x = y // y의 값을 x에 할당, Optional(10)증가 연산자와 감소 연산자 x의 값을 1 증감// 다른 언어와 차이점 없음x = x..." }, { "title": "iOS 프로그래밍 2주차", "url": "/posts/iOS-week2/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-09-11 14:50:00 +0900", "snippet": "Mac Keyboard Command (Apple) Key Control Key Option (Alt) Key Shift Key Caps Lock Key Tab Key Function KeyMac에서의 한/영 전환 Ctrl + Space (단축키 수정 가능) Caps Lock화면 캡쳐 전체화면: Command + Shift + 3 특정부분만 캡쳐: Command + Shift + 4 Command + Shift + 4 + Space + 카메라 이동하여 해당 윈도우만 캡쳐Flappy ..." }, { "title": "iOS 프로그래밍 1주차 요약", "url": "/posts/iOS-week1/", "categories": "College, iOS", "tags": "college, ios, swift", "date": "2024-09-04 16:05:00 +0900", "snippet": "iOS vs Andorid 구분 iOS Andord 언어 Swift, Object-C Java, Kotlin 개발 환경 Xcode Android Studio UI 디자인 UIKit, SwiftUI XML, Jetpack Compose 배포 App Store Google Play Store 디바이스 ..." }, { "title": "C++ 15주차 요약", "url": "/posts/cpp-week15-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-12-13 19:42:00 +0900", "snippet": "콘솔 입출력C++에서는 C와 달리 객체 지향 개념의 입출력 개체 스트림(입출력 함수)을 이용하는 것이 추천된다. 스트림은 컴퓨터의 입출력장치와 프로그램 사이의 인터페이스 역할을 수행한다. cin은 삽입연산자 “»”를 이용해 데이터를 입력받아 변수에 저장하는 입력 스트림 객체다. cout은 추출연산자 “«”를 이용해 변수의 내용을 화면에 출력하는 출력 스트림 객체다.ios 클래스istream 클래스는 입력 작업에 필요한 기능들이 정의되어 있는 클래스다. ostream 클래스는 출력 작업에 필요한 기능들이 정의되어 있는 클래스다...." }, { "title": "C++ 14주차 요약", "url": "/posts/cpp-week14-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-12-07 21:15:00 +0900", "snippet": "템플릿매개변수를 통해 다형성을 제공하며 코드를 전혀 바꾸지 않고 형만 다른 함수가 필요한 경우에 사용하는 것이 좋으며 값 뿐만 아니라 형을 인자로 받는 함수로서 인자로 받은 형에 대해 함수를 생성하는 포괄적 함수(Generic Function)이다.STL (Standard Template Library)반복자(Iterator)를 가지고 동작하는 C++ 표준 라이브러리의 일부로, 자주 사용되는 50여 개의 알고리즘과 자료구조가 포함되어있다. 객체들을 저장하는 객체나 클래스인 컨테이너(Container), 컨테이너에 저장된 요소를..." }, { "title": "C++ 13주차 요약", "url": "/posts/cpp-week13-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-11-30 21:13:00 +0900", "snippet": "중첩(Overloading) vs 중복(Overriding)Overloading은 함수/연산자 중첩으로 구현, Overriding은 가상함수로 구현 Overloading은 정적 바인딩, Overriding은 동적 바인딩 Overloading은 수평적/병렬 구조, Overriding은 수직적/상속 구조 Overloading의 작용 시점은 컴파일시, Overriding의 작용 시점은 실행시바인딩변수와 함수에 대한 메모리 할당이나 함수 호출이 발생했을 때 실체로 처리해야 하는 명령어들이 결정되는 시점으로 정적 바인딩과 동적 바인딩이..." }, { "title": "C++ 12주차 요약", "url": "/posts/cpp-week12-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-11-23 20:14:00 +0900", "snippet": "기본클래스, 파생클래스기본클래스와 파생클래스의 관계는 is a 관계로 이루어져 있으며 파생클래스는 기본클래스의 속성을 사용할 수 있다. 이때 기본클래스를 부모, 파생클래스를 자식으로 칭하기도 한다.상속 접근 제어상속 접근 제어 속성은 private, protected, public으로 나누어져 있다. public 상속 접근인 경우에는 기본 클래스의 public, protected 멤버들은 파생 클래스의 public, protected 멤버가 되며 기본 클래스의 private 멤버는 private 속성으로 남으며 파생 클래스에서..." }, { "title": "C++ 11주차 요약", "url": "/posts/cpp-week11-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-11-16 12:00:00 +0900", "snippet": "연산자 중첩다형성을 구현하는 방법 중의 하나로, 기존에 사용되던 연산자의 기능을 클래스에서 새롭게 정의하여 사용한다. 연산자 중첩은 operator 키워드를 사용하며 단항연산자 중첩과 이항연산자 중첩이 있다.단항연산자 중첩피연산자가 하나일 때 사용되는 연산자 중첩으로 ++,–,-가 있으며 단항연산자를 중첩할 때는 매개변수가 필요하지 않다. 단항연산자 중첩은 전치 연산자와 후치 연산자 모두 사용할 수 있다.이항연산자 중첩연산자 양쪽에 피연산자가 필요한 +,-,*,/,% 등의 연산자 중첩으로 이항연산자 중첩은 한 개의 매개변수가 ..." }, { "title": "C++ 10주차 요약", "url": "/posts/cpp-week10-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-11-09 22:03:00 +0900", "snippet": "함수 중첩다형성을 구현하는 한가지 방법으로, C에서는 기능이 같지만 처리하는 자료형에 따라 다른 이름의 함수를 사용했으나 C++에서는 다형성을 제공하여 하나의 함수 이름을 자료형이 달라도 중첩해서 사용할 수 있다.생성자 중첩생성자 함수도 매개변수를 가질 수 있어 매개변수의 수나 자료형에 따라 여러 개의 생성자 함수를 중첩할 수 있다. 생성자 함수 중첩은 객체에 초기값을 다양하게 주는 선택 기회를 제공해준다.디폴트 인자 (Default Parameter / Argument)C++에서는 함수를 호출할 때 별도의 매개변수를 전달하지..." }, { "title": "C++ 9주차 요약", "url": "/posts/cpp-week9-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-11-02 21:27:00 +0900", "snippet": "const 멤버const형 멤버함수는 해당 멤버변수를 변경하는 연산을 수행할 수 없으며 const로 지정된 함수는 멤버변수의 값을 변경할 수 없으며 멤버를 참조만 하는 읽기 전용 함수가 된다. const 함수는 const 함수만 호출할 수 있으며 일반 멤버함수에는 접근할 수 없다. const 형을 선언할 때 멤버변수는 형 앞에, 멤버함수는 괄호 뒤에 const를 추가한다.const int age;int getAge() const;const 객체객체가 const로 지정되면 해당 객체에 초기화된 데이터는 변경할 수 없으며 cons..." }, { "title": "C++ 7주차 요약", "url": "/posts/cpp-week7-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-10-19 18:57:00 +0900", "snippet": "객체와 멤버 호출클래스에서는 멤버 변수는 private 속성을 가지고있어 외부에서 접근이 불가능하므로 public 속성을 가지고 있는 멤버 함수를 이용해 외부에서 접근한다.멤버 호출직접참조연산자 : . 일반 객체가 멤버변수, 함수에 접근하기 위해 사용한다.간접참조연산자 : -&amp;gt; 포인터 객체가 멤버변수, 함수에 접근하기 위해 사용한다.coco.getAge() // 일반 객체 coco의 나이를 getAge() 멤버 함수를 호출해 얻는다.coco.sleep() // 일반 객체 coco의 sleep() 멤버 함수를 호..." }, { "title": "C++ 6주차 요약", "url": "/posts/cpp-week6-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-10-12 22:03:00 +0900", "snippet": "클래스 (Class)Integer 클래스와 객체class Integer { // Integer라는 이름의 클래스 private: // 속성 int val; // 멤버 변수 / private 속성 public: // 속성 int getVal(); // 멤버 함수 / 출력 / getter int setVal(); // 멤버 함수 / 입력 / setter} Val1; // 객체 정의..." }, { "title": "C++ 5주차 요약", "url": "/posts/cpp-week5-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-10-04 22:54:00 +0900", "snippet": "객체 지향 프로그래밍구조적 프로그래밍 기법을 계승, 발전시킨 개념 객체(Object)를 이용해 자료와 처리 동작을 하나로 묶어 다룬다.객체 (Object)자료와 연산(함수, Method)을 하나로 묶어 만든 요소 자료를 표현하는 변수와 객체의 행동을 정의한 함수로 구성인스턴스 (Instance)어떤 클래스에서 생성되거나 한 클래스에 속하는 객체클래스 (Class)객체의 속성을 정의하는 수단 객체의 타입(Type), 기본 규격(Specification)객체 지향 기술추상 자료형 (Abstraction Data Type) / 캡슐..." }, { "title": "C++ 4주차 요약", "url": "/posts/cpp-week4-summary/", "categories": "College, CPP", "tags": "college, cpp", "date": "2021-09-30 00:40:00 +0900", "snippet": "함수의 정의와 호출, 선언함수 정의함수의 이름과 매개변수, 리턴형, 이 함수가 수행할 기능을 정의한다.void display() { cout &amp;lt;&amp;lt; &quot;안녕&quot;;}함수 호출정의한 함수를 사용하기 위해서 함수의 이름과 매개변수를 작성해 호출한다.int main() { display()}함수 선언함수의 이름과 매개변수, 리턴형을 선언해 컴파일러에게 함수에 대한 정보를 미리 제공한다.void display();살매개변수와 형식매개변수실매개변수 (Actual Parameter: Argu..." } ]
